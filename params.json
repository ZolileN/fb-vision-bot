{
  "name": "Facebook Vision Bot",
  "tagline": "Facebook Messenger bot that processes images through Google Cloud Vision API",
  "body": "# fb-vision-bot\r\nFacebook Messenger Bot that consumes Google Cloud Vision API and provides insights on images.\r\n\r\n@TODO: This bot will integrate the NLP platform Wit.ai or Api.ai with Facebook Messenger to provide a richer and smarter user experience.\r\n\r\nFeatures of Google Cloud Vision API are the following:\r\n\r\n- Face Detection\r\n  - Detect multiple faces within an image, along with the associated key facial attributes like emotional state or wearing headwear. Facial Recognition is not supported.\r\n- Label Detection\r\n  - Detects broad sets of categories within an image, ranging from modes of transportation to animals.\r\n- Landmark Detection\r\n  - Detect popular natural and man-made structures within an image.\r\n- Logo Detection\r\n  - Detect popular product logos within an image.\r\n- Optical Character Recognition\r\n  - Detect and extract text within an image, with support for a broad range of languages, along with support for automatic language identification.\r\n- Explicit Content Detection\r\n  - Detect explicit content like adult content or violent content within an image.\r\n- Image Attributes\r\n  - Detect general attributes of the image, such as dominant color.\r\n\r\nFirst, check out the [Quickstart Guide](https://developers.facebook.com/docs/messenger-platform/quickstart) provided by Facebook.\r\n\r\nSecond, mkdir config and add a default.json inside config with the following contents:\r\n\r\n```javascript\r\n{\r\n  \"herokuBaseUrl\": \"YOUR HEROKU URL WITH TRAILING SLASH\",\r\n  \"ngrokBaseUrl\": \"YOUR NGROK URL WITH TRAILING SLASH\",\r\n  \"projectID\": \"YOUR GOOGLE CLOUD PROJECT ID\",\r\n  \"pageID\": \"YOUR PAGE ID\",\r\n  \"validationToken\": \"YOUR OWN TOKEN\" (by default, \"just_do_it\")\r\n  \"appSecret\": \"YOUR APP SECRET\",\r\n  \"pageAccessToken\": \"YOUR PAGEACCESS TOKEN\",\r\n  \"validationToken\": \"YOUR VALIDATION TOKEN\"\r\n}\r\n```\r\n\r\nThird, since you have to install node-canvas for image processing, follow the instructions from here: [Node-canvas](https://github.com/Automattic/node-canvas)\r\n\r\nFinally, if you are on Windows, JPEG support doesn't work correctly with node-canvas. Therefore you have to use ImageMagick to manually convert .jpg to .png.\r\nFollow the instructions of this: [EasyImage](https://github.com/hacksparrow/node-easyimage)\r\n\r\n\r\n## Running Locally\r\n0. Install Node.js, NPM, and [ngrok](https://ngrok.com/) (or [localtunnel](https://localtunnel.me/))\r\n1. Run \"sudo npm install\" command to install external modules locally\r\n2. Run \"node app.js\" to run the app\r\n3. Enter localhost:8080 on the web url to check (All static files are served in the 'public' folder)\r\n4. Enter ngrok http 8080 to tunnel a connection from https://foo.ngrok.io to localhost\r\n5. Give https://foo.ngrok.io/webhook for your webhook verificaiton URL in the Messenger App settings\r\n6. Now for every message, you can check the response and request through your console.\r\n\r\n## Running on Heroku\r\n0. Do steps 0~1 from above and install Heroku toolbelt from the Heroku website\r\n1. Run \"heroku login\"\r\n2. If existing repository, simply add a remote to heroku with this command: heroku git:remote -a YOUR_HEROKU_APP\r\n3. Else, run the following codes\r\n\r\n  - heroku git:clone -a image-bot-test && cd image-bot-test\r\n  - git add . && git commit -am \"make it better\" && git push heroku master\r\n\r\n4. Give https://yourheroku.herokuapp.com/webhook for your webhook verificaiton URL in the Messenger App settings\r\n5. Voila :)\r\n6. Alternatively, you can connect your herokuapp to GitHub, and set it to automatically deploy whenever a commit is made.\r\np.s. Add the following url to the buildpack lists on heroku : https://github.com/mojodna/heroku-buildpack-cairo.git\r\n\r\nOr you can simply click\r\n\r\n@TODO: (Will add deploy to heroku button here later)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}